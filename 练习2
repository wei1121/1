1、英雄联盟中有这么一些分类：TANK (坦克)WIZARD (法师)ASSASSIN (刺客)ASSIST (辅助)WARRIOR (近战)RANGED (远程)PUSH (推进)FARMING (打野)设计一个枚举类型HeroType,使用上述分类作为常量，再编写一段switch语句，把每种枚举常量输出为中文字符串 
package hh;
public enum HeroType {
    TANK, WIZARD, ASSASSIN, ASSIST, WARRIOR, RANGED, PUSH, FARMING
 
}

package hh;
public class Hero {
    public String name; // 姓名
 
    public static void main(String[] args) {
 
        HeroType type = HeroType.ASSASSIN;
        switch (type) {
        case TANK:
            System.out.println("坦克");
            break;
        case WIZARD:
            System.out.println("法师");
            break;
        case ASSASSIN:
            System.out.println("刺客");
            break;
        case ASSIST:
            System.out.println("辅助");
            break;
        case WARRIOR:
            System.out.println("近战");
            break;
        case RANGED:
            System.out.println("远程战");
            break;
        case PUSH:
            System.out.println("推进");
            break;
        case FARMING:
            System.out.println("打野");
            break;
        }
    }
}

2、接口
public interface Healer {
    public void heal(); //加血
}
public class four extends Hero implements Healer{
 
    @Override
    public void heal() {
        System.out.println(name+" 加了一口血");
    }
}

3、回文数
public class huiwen {

	public static void main(String[] args) {
		System.out.println("输出回文字符串：");
		char[] m= new char[4];
		for(char a='a';a<='d';a++)
		{
			for(char b='a';b<='d';b++)
			{
				for(char c='a';c<='d';c++)
				{
					for(char d='a';d<='d';d++)
					{
						m[0]=a;
						m[1]=b;
						m[2]=c;
						m[3]=d;
						if(m[0]==m[3] && m[1]==m[2])
						{
							System.out.print(m[0]);
							System.out.print(m[1]);
							System.out.print(m[2]);
							System.out.print(m[3]);
							System.out.println();
						}
					}
				}
			}
		}
		}
	}
	
4、查找
package week8;

public class MyBinarySearch {
	public static int binarySearch(int[] srcArray, int des) {
		int number = -1;
		int l = 0, r = srcArray.length;
		while (l != r) {
			int m = (l + r) / 2;
			if (srcArray[m] == des) {
				number = des;
				break;
			} else if (srcArray[m] > des) {
				r = m - 1;
			} else
				l = m + 1;
		}
		if (srcArray[l] == des) {
			number = l;
		}
		number=number+1;
		return number;
	}

	public static void main(String[] args) {
		int[] srcArray = new int[] { 2, 5, 9, 7, 24, 11, 55, 99, 102, 79, 60 };
		System.out.print("查找数字是数组中的：");
		System.out.print("第"+binarySearch(srcArray, 55)+"个");

	}

}

5、类
package week8;
import java.util.Scanner;
public class TestRectangle {
	public static void main(String[] args) {
		Scanner input=new Scanner(System.in);
		Rectangle rectangle=new Rectangle();
		System.out.println("请输入四边形的长和宽");
		double side1=input.nextDouble();
		double side2=input.nextDouble();
		rectangle=new Rectangle(side1,side2);
		System.out.println("四边形面积为:"+rectangle.getArea());
		System.out.println("四边形周长为:"+rectangle.getPerimeter());
	}
}
package week8;
public class Rectangle {
	public double side1=1.0;//输入长和宽
	public double side2=1.0;
	public Rectangle() {
		super();
	}
	
	public Rectangle(double side1, double side2) {
		super();
		this.side1 = side1;
		this.side2 = side2;
	}

	public double getSide1() {
		return side1;
	}
	public void setSide1(double side1) {
		this.side1 = side1;
	}
	public double getSide2() {
		return side2;
	}
	public void setSide2(double side2) {
		this.side2 = side2;
	}
	
	public double getArea()//四边形面积
	{
		double a;
		a=side1*side2;
		return a;
	}
	
	public double getPerimeter()//四边形周长
	{
		double a;
		a=side1+side2;
		return a;
	}
}

package Student;
public class Student {
	public String name;
	public int age;
	public String sex;
	public int chinese;
	public int math;
	public int english;
	
	public Student() {
		super();
	}

	
	public Student(String name, int age, String sex, int chinese, int math, int english) {
		super();
		this.name = name;
		this.age = age;
		this.sex = sex;
		this.chinese = chinese;
		this.math = math;
		this.english = english;
	}

	
	public String getName() {
		return name;
	}


	public void setName(String name) {
		this.name = name;
	}


	public int getAge() {
		return age;
	}


	public void setAge(int age) {
		this.age = age;
	}


	public String getSex() {
		return sex;
	}


	public void setSex(String sex) {
		this.sex = sex;
	}


	public int getChinese() {
		return chinese;
	}


	public void setChinese(int chinese) {
		this.chinese = chinese;
	}


	public int getMath() {
		return math;
	}


	public void setMath(int math) {
		this.math = math;
	}


	public int getEnglish() {
		return english;
	}


	public void setEnglish(int english) {
		this.english = english;
	}


	public static void main(String[] args) {
		

	}

}

6、字符串
package Week10;
import java.util.Scanner;
public class Char {

	public static void main(String[] args) {
		Scanner in=new Scanner(System.in);
		System.out.println("请输入第一个字符串");
		String a=in.nextLine();
		System.out.println("请输入第二个字符串");
		String b=in.nextLine();
		char[] m=a.toCharArray();
		char[] n=b.toCharArray();
		int count=0,temp=0;
		int i,j,q;  
		System.out.println(m.length);
		System.out.println(n.length);
		for(i=0;i<n.length;i++)
		{
			q=i;
			count=0;
			if(n[i]==m[0])
			{
				for(j=0;j<m.length;j++)
				{
					if(q<n.length)
					{
						if(n[q]==m[j])
					  {
						count++;
						q++;
					  }
					}
				}
				if(count==m.length)
				temp++;
			}
			
		}
		System.out.println("字符串a在字符串b中出现的次数为"+temp);
		

	}

}

7、类
package Week10;
import java.util.HashMap;
import java.util.Scanner;
import java.util.Set;
import java.util.Iterator;
public class Char2 {

	public static void main(String[] args) {
		Scanner in = new Scanner(System.in);
		String a=in.nextLine();
		HashMap<Character,Integer> hm=new HashMap<Character,Integer>();
		for(int i=0;i<a.length();i++)
		{
			if(hm.containsKey(a.charAt(i)))
			{
				int newcnt=hm.get(a.charAt(i))+1;
				hm.put(a.charAt(i),newcnt);
			}
			else
				hm.put(a.charAt(i),1);
		}
		Set<Character> keyset=hm.keySet();
		Iterator<Character> iter=keyset.iterator();
		Character c=null;
		while(iter.hasNext())
		{
			c=iter.next();
			System.out.println(c+": "+hm.get(c));
		}
		}
		
		
		

	}
